#!/bin/bash  

owner=$1
tag=$2
deltag=$3

# needed to avoid issues with authentification
git config --unset-all http.https://github.com/.extraheader

# set identity for tagging
if [ "$owner" == "adedner" ]; then
  git config --global user.email "a.s.dedner@warwick.ac.uk"
  git config --global user.name "A Dedner"
elif [ "$owner" == "dr-robertk" ]; then
  git config --global user.email "robertk@posteo.org"
  git config --global user.name "Robert K"
else
  echo "Unknown owner $owner selected"
  exit 1
fi

export GH_TOKEN=$PAT
gh auth status

syncmodule()
{
  set +e
  m=$1 # module name (name)
  p=$2 # module path (dune-project's gitlab)

  # first checkout the current version of the git repo this will make it
  # possible to later push the tags generated on github which are lost
  # during the mirroring process:
  git clone https://user:$PAT@github.com/$owner/$m gh$m

  # now clone the original
  git clone --mirror $p $m
  cd $m

  if [ "$m" = "dune-alugrid" ] ; then
    echo "running bfg.jar..."
    # this rewrites the history of dune-alugrid to exclude some '*.out'
    # files which are too large. Note that every commit hash changes but
    # the origin is stored in the new log message
    cd ..
    java -jar bfg.jar --strip-blobs-bigger-than 90M $m >& /dev/null
    cd $m
    git reflog expire --expire=now --all && git gc --prune=now --aggressive
  fi

  # mirror to github and remove original repo
  echo "git push --mirror https://user:$PAT@github.com/$owner/$m"
  git push --mirror https://user:$PAT@github.com/$owner/$m
  cd ..
  rm -rf $m
  
  if [ "$tag" = "automatic" ] ; then
    cd gh$m
    git checkout master
    # first push the older tags
    git push --tags
    # possibly remove a tag
    if [ ! -z $deltag ] ; then
      git push origin :refs/tags/$deltag
    fi

    # get the new data from the mirror step
    git fetch
    git pull

    # generate the new tag and push it
    git tag -a $tag -m "from github action"
    git push origin $tag

    cd ..
  fi

  # remove gh repo
  rm -rf gh$m
}

base="https://gitlab.dune-project.org"
coreurl="$base/core"
femurl="$base/dune-fem"
exturl="$base/extensions"

declare -A coremodules
coremodules+=(
  [dune-common]='dune-common.git'
  [dune-geometry]='dune-geometry.git'
  [dune-grid]='dune-grid.git'
  [dune-istl]='dune-istl.git'
  [dune-localfunctions]='dune-localfunctions.git'
)
declare -A femmodules
femmodules=(
  [dune-fem]='dune-fem.git'
  [dune-fem-dg]='dune-fem-dg.git'
  [dune-vem]='dune-vem.git'
)
declare -A extramodules
extramodules=(
  [dune-alugrid]='dune-alugrid.git'
  [dune-polygongrid]='dune-polygongrid.git'
  [dune-spgrid]='dune-spgrid.git'
)

echo "Syncing core modules and tagging with $tag"
for m in "${!coremodules[@]}" ; do
  p="${coremodules[$m]}"
  syncmodule $m "$coreurl/$p"
done
echo "Syncing fem modules and tagging with $tag"
for m in "${!femmodules[@]}" ; do
  p="${femmodules[$m]}"
  syncmodule $m "$femurl/$p"
done
echo "Syncing extension modules and tagging with $tag"
for m in "${!extramodules[@]}" ; do
  p="${extramodules[$m]}"
  syncmodule $m "$exturl/$p"
done
